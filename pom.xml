<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>cdm-webapp</artifactId>
  <groupId>eu.etaxonomy</groupId>
  <version>3.13.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>CDM Webapp</name>
  <properties>
    <cdmlib.version>3.13.0-SNAPSHOT</cdmlib.version>
    <cdm.vaadin.version>3.13.0-SNAPSHOT</cdm.vaadin.version>
  </properties>
  <repositories>
    <!-- the cdm internal repository -->
    <repository>
      <id>EditRepository</id>
      <url>http://wp5.e-taxonomy.eu/mavenrepo/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>
  <distributionManagement>
    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>wp5.e-taxonomy.eu</id>
      <name>Edit Maven Repository</name>
      <url>scpexe://wp5.e-taxonomy.eu/var/www/wp5.e-taxonomy.eu/mavenrepo/</url>
      <layout>default</layout>
    </repository>
  </distributionManagement>
  <profiles>
    <profile>
      <id>local-repository</id>
      <activation>
        <property>
          <name>localrepo</name>
        </property>
      </activation>
      <repositories>
        <repository>
          <id>EditLocalRepository</id>
          <url>file://${localrepo}/eu/etaxonomy/</url>
          <releases>
            <enabled>false</enabled>
            <updatePolicy>always</updatePolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdmlib-remote-webapp</artifactId>
      <version>${cdmlib.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>eu.etaxonomy</groupId>
      <artifactId>cdm-vaadin</artifactId>
      <version>${cdm.vaadin.version}</version>
      <type>war</type>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>${project.build.directory}/dependency/cdm-vaadin</directory>
            </resource>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>${project.build.directory}/dependency/cdmlib-remote-webapp</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <!-- 
        
        when executing the mvn deploy directly (not via jgit-flow *-finish) unpacked war
        resources are accumulating and must be deleted before entering the prepare-package
        life cycle phase, therefore configuring this auto-clean makes a lot of sense.
        
        BUT the auto-clean is causing problems with the jgit-flow plugin,
        it is called twice and thus removes the cdm-webapp-x.x.x.war after it has been build,
        maven then fails with : "The packaging for this project did not assign a file to the build artifact"
        Therefore this is disabled! 
        
        A possible solution to this is to bind define a special auto-clean execution to the prepare-package phase,
        as long as this plugin is defined before the maven-dependency-plugin the clean should only
        happen before the unpack, see http://www.mkyong.com/maven/maven-plugin-execution-order-in-same-phase/
        Maybe it makes sense to define a fileset that only includes the unpacked war files  
        
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>eu.etaxonomy</groupId>
                  <artifactId>cdm-vaadin</artifactId>
                  <version>${cdm.vaadin.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/dependency/cdm-vaadin</outputDirectory>
                  <excludes>META-INF/**</excludes>
                </artifactItem>
                <artifactItem>
                  <groupId>eu.etaxonomy</groupId>
                  <artifactId>cdmlib-remote-webapp</artifactId>
                  <version>${cdmlib.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/dependency/cdmlib-remote-webapp</outputDirectory>
                </artifactItem>
              </artifactItems>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m6</version>
        <configuration>
          <pushHotfixes>true</pushHotfixes>
          <pushReleases>true</pushReleases>
          <enableSshAgent>true</enableSshAgent>
          <allowSnapshots>true</allowSnapshots>
          <allowUntracked>true</allowUntracked>
        </configuration>
        <dependencies>
          <!-- 
                upgrading dependency jsch.agent.version of jgit-flow plugin to 0.1.53 
                in order have ssl key exchange algorithms compatible with openssh 6.7 
             -->
          <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.53</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0-beta-6</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>1.0-beta-6</version>
      </extension>
    </extensions>
  </build>
</project>
